{"version":3,"mappings":";wnCAAMA,EAAW,CACf,GAAI,SACJ,GAAI,YACJ,GAAI,YACJ,GAAI,SACJ,GAAI,QACJ,GAAI,cACJ,GAAI,QACJ,MAAO,SACP,GAAI,UACJ,GAAI,UACJ,GAAI,SACJ,MAAO,QACP,KAAM,UACN,MAAO,UACP,IAAK,kBACL,MAAO,WACP,GAAI,WACJ,MAAO,MACP,GAAI,SACN,EAEA,SAASC,GAAsB,CAC7B,MAAMC,EAAM,SAAS,cAAc,eAAe,EAC9CA,GAAKA,EAAI,OAAQ,EACrB,SAAS,KAAK,MAAM,SAAW,EACjC,CAEA,SAASC,EAAWC,EAAW,CAC7BH,EAAqB,EAErB,MAAMI,EAAQ,SAAS,cAAc,KAAK,EAC1CA,EAAM,UAAY,eAClBA,EAAM,UAAY;AAAA;AAAA;AAAA,QAGZD,CAAS;AAAA;AAAA,IAIf,SAAS,KAAK,YAAYC,CAAK,EAC/B,SAAS,KAAK,MAAM,SAAW,SAE/BA,EACG,cAAc,YAAY,EAC1B,iBAAiB,QAASJ,CAAmB,EAChD,SAAS,iBAAiB,UAAWK,CAAS,EAC9CD,EAAM,iBAAiB,QAASE,GAAK,CAE/BA,EAAE,SAAWF,IACfJ,EAAqB,EACrB,SAAS,oBAAoB,UAAWK,CAAS,EAEvD,CAAG,EAED,SAASA,EAAUC,EAAG,CAChBA,EAAE,MAAQ,WACZN,EAAqB,EACrB,SAAS,oBAAoB,UAAWK,CAAS,EAEvD,CACA,CAEO,SAASE,EAAiBC,EAAU,CACzC,MAAMC,EAAS;AAAA;AAAA,2CAE0BD,CAAQ;AAAA,uFAEjDN,EAAWO,CAAM,CACnB,CAEO,SAASC,GAAiB,CAQ/BR,EAPa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAOE,CACjB,CAEO,SAASS,EAAiBC,EAAOC,EAAa,GAAI,SAEvD,MAAMC,GADQ,KAAK,MAAM,aAAa,QAAQ,WAAW,CAAC,GAAK,CAAE,GAC3C,KAAKC,GAAQA,EAAK,KAAOH,EAAM,EAAE,EACjDI,EAAcF,EAAU,sBAAwB,oBAEhDG,EACJJ,EAAW,OAAS,EAChBA,EAAW,KAAK,GAAG,IACnBK,EAAAN,EAAM,YAAN,YAAAM,EACI,IAAIC,GAAMpB,EAASoB,CAAE,GACtB,OAAO,SACP,KAAK,OAAQ,GAEhBC,EAAO;AAAA;AAAA,iDAGPR,EAAM,WACd,+BAAqCA,EAAM,KAAK;AAAA;AAAA,kCAEdA,EAAM,OAASA,EAAM,IAAI;;AAAA;AAAA,sDAI/CA,EAAM,YAClB,UAAoBA,EAAM,UAAU;AAAA,iDACa,KAAK,MAC1CA,EAAM,UAClB,CAAW;AAAA,4CACiCK,CAAiB;;AAAA;AAAA,gCAInDL,EAAM,UAAY,2BACnB;;AAAA,sCAE6BI,CAAW;AAAA;AAAA;AAAA,IAK/Cd,EAAWkB,CAAI,GAEfC,EAAA,SACG,cAAc,cAAc,IAD/B,MAAAA,EAEI,iBAAiB,QAAS,SAAY,CACtC,IAAIC,EAAQ,KAAK,MAAM,aAAa,QAAQ,WAAW,CAAC,GAAK,CAAE,EAE3DR,GACFQ,EAAQA,EAAM,OAAOP,GAAQA,EAAK,KAAOH,EAAM,EAAE,EACjD,MAAM,+BAA+B,IAErCU,EAAM,KAAKV,CAAK,EAChB,MAAM,2BAA2B,GAGnC,aAAa,QAAQ,YAAa,KAAK,UAAUU,CAAK,CAAC,EACvDtB,EAAqB,EAErB,GAAI,CACF,KAAM,CAAE,YAAAuB,CAAW,EAAK,MAAMC,EAAA,4BAAAD,GAAA,aAAO,uBAAc,EAAC,mBAAAA,CAAA,6BAChDA,GACFA,EAAa,CAEhB,OAAQE,EAAO,CACd,QAAQ,MAAM,uCAAwCA,CAAK,CACnE,CACA,EACA","names":["genreMap","removeExistingModal","old","baseMarkup","innerHTML","modal","handleKey","e","showTrailerModal","videoKey","iframe","showErrorModal","showDetailsModal","movie","genreNames","isSaved","item","buttonLabel","displayGenreNames","_a","id","html","_b","saved","loadLibrary","__vitePreload","error"],"ignoreList":[],"sources":["../../src/js/modal.js"],"sourcesContent":["const genreMap = {\n  28: 'Action',\n  12: 'Adventure',\n  16: 'Animation',\n  35: 'Comedy',\n  80: 'Crime',\n  99: 'Documentary',\n  18: 'Drama',\n  10751: 'Family',\n  14: 'Fantasy',\n  36: 'History',\n  27: 'Horror',\n  10402: 'Music',\n  9648: 'Mystery',\n  10749: 'Romance',\n  878: 'Science Fiction',\n  10770: 'TV Movie',\n  53: 'Thriller',\n  10752: 'War',\n  37: 'Western',\n};\n\nfunction removeExistingModal() {\n  const old = document.querySelector('.custom-modal');\n  if (old) old.remove();\n  document.body.style.overflow = '';\n}\n\nfunction baseMarkup(innerHTML) {\n  removeExistingModal();\n\n  const modal = document.createElement('div');\n  modal.className = 'custom-modal';\n  modal.innerHTML = `\n    <div class=\"modal-content\" tabindex=\"0\">\n      <button class=\"close-btn\" aria-label=\"Close modal\">×</button>\n      ${innerHTML}\n    </div>\n  `;\n\n  document.body.appendChild(modal);\n  document.body.style.overflow = 'hidden';\n\n  modal\n    .querySelector('.close-btn')\n    .addEventListener('click', removeExistingModal);\n  document.addEventListener('keydown', handleKey); // ESC tuşu\n  modal.addEventListener('click', e => {\n    // Dış tıklama\n    if (e.target === modal) {\n      removeExistingModal();\n      document.removeEventListener('keydown', handleKey);\n    }\n  });\n\n  function handleKey(e) {\n    if (e.key === 'Escape') {\n      removeExistingModal();\n      document.removeEventListener('keydown', handleKey);\n    }\n  }\n}\n\nexport function showTrailerModal(videoKey) {\n  const iframe = `\n    <iframe width=\"560\" height=\"315\"\n      src=\"https://www.youtube.com/embed/${videoKey}\"\n      frameborder=\"0\" allowfullscreen loading=\"lazy\" class=\"trailer-iframe\"></iframe>`;\n  baseMarkup(iframe);\n}\n\nexport function showErrorModal() {\n  const html = `\n    <div class=\"error-modal-content\">\n      <p class=\"error-title\">OOPS...</p>\n      <p class=\"error-text\">We are very sorry!<br>But we couldn’t find the trailer.</p>\n      <img src=\"./images/trailer-error.png\" alt=\"Error image\" class=\"error-image\" />\n    </div>\n  `;\n  baseMarkup(html);\n}\n\nexport function showDetailsModal(movie, genreNames = []) {\n  const saved = JSON.parse(localStorage.getItem('myLibrary')) || [];\n  const isSaved = saved.some(item => item.id === movie.id);\n  const buttonLabel = isSaved ? 'Remove from Library' : 'Add to My Library';\n\n  const displayGenreNames =\n    genreNames.length > 0\n      ? genreNames.join(' ')\n      : movie.genre_ids\n          ?.map(id => genreMap[id])\n          .filter(Boolean)\n          .join(' ') || '';\n\n  const html = `\n    <div class=\"movie-modal\">\n      <img src=\"https://image.tmdb.org/t/p/w500${\n        movie.poster_path\n      }\" class=\"movie-poster\" alt=\"${movie.title}\" />\n      <div class=\"movie-info\">\n        <h2 class=\"movie-title\">${movie.title || movie.name}</h2>\n\n        <ul class=\"movie-stats\">\n          <li><strong>Vote / Votes</strong><span><b>${\n            movie.vote_average\n          }</b> / ${movie.vote_count}</span></li>\n          <li><strong>Popularity</strong><span>${Math.round(\n            movie.popularity\n          )}</span></li>\n          <li><strong>Genre</strong><span>${displayGenreNames}</span></li> </ul>\n\n        <h3 class=\"about-heading\">ABOUT</h3>\n        <p class=\"about-text\">${\n          movie.overview || 'No description available.'\n        }</p>\n\n        <button class=\"library-btn\">${buttonLabel}</button>\n      </div>\n    </div>\n  `;\n\n  baseMarkup(html);\n\n  document\n    .querySelector('.library-btn')\n    ?.addEventListener('click', async () => {\n      let saved = JSON.parse(localStorage.getItem('myLibrary')) || [];\n\n      if (isSaved) {\n        saved = saved.filter(item => item.id !== movie.id);\n        alert('Film kütüphaneden kaldırıldı.'); // Küçük bir uyarı\n      } else {\n        saved.push(movie);\n        alert('Film kütüphaneye eklendi.'); // Küçük bir uyarı\n      }\n\n      localStorage.setItem('myLibrary', JSON.stringify(saved));\n      removeExistingModal();\n\n      try {\n        const { loadLibrary } = await import('./library.js');\n        if (loadLibrary) {\n          loadLibrary();\n        }\n      } catch (error) {\n        console.error('loadLibrary yüklenirken hata oluştu:', error);\n      }\n    });\n}\n"],"file":"assets/modal-DtneLgWJ.js"}