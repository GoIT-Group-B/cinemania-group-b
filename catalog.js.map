{"version":3,"file":"catalog.js","sources":["../src/js/pop-up.js","../src/js/catalog-hero.js","../src/js/catalog-film-list.js"],"sourcesContent":["import { IMG_BASE_URL, ENDPOINTS } from './fetchMovies.js';\n\nconst modal = document.getElementById('movieDetailModal');\nconst poster = document.getElementById('detailPoster');\nconst title = document.getElementById('detailTitle');\nconst votes = document.getElementById('detailVotes');\nconst popularity = document.getElementById('detailPopularity');\nconst genresSpan = document.getElementById('detailGenres');\nconst overview = document.getElementById('detailOverview');\nconst closeBtn = document.getElementById('closeDetailModal');\n\nexport function openMovieDetailModal(movie, genreMap) {\n  try {\n    // Görsel\n    poster.src = `${IMG_BASE_URL}${ENDPOINTS.IMG_W500}${movie.poster_path}`;\n    poster.alt = movie.title;\n\n    // Metin verileri\n    title.textContent = movie.title;\n    votes.textContent = `${movie.vote_average} / ${movie.vote_count}`;\n    popularity.textContent = Math.floor(movie.popularity);\n\n    // Genre id'lerini alma (hem genre_ids hem de genres dizisi varsa kontrol et)\n    const genreIds = movie.genre_ids || (movie.genres ? movie.genres.map(g => g.id) : []);\n\n    // Genre map boş mu kontrolü\n    if (!genreMap || Object.keys(genreMap).length === 0) {\n      console.warn(\"Genre map boş veya tanımsız! Genre verileri henüz yüklenmemiş.\");\n      genresSpan.textContent = 'Unknown';\n    } else {\n      genresSpan.textContent = genreIds\n        .map(id => genreMap[id] || 'Unknown')\n        .join(', ');\n    }\n\n    overview.textContent = movie.overview || 'No description available.';\n\n    // Modal'ı göster\n    modal.classList.add('active');\n  } catch (error) {\n    console.error(\"openMovieDetailModal hatası:\", error);\n  }\n}\n\n// Modal kapatma\ncloseBtn.addEventListener('click', () => {\n  modal.classList.remove('active');\n});\n","import {\n  fetchMovies,\n  BASE_URL,\n  ENDPOINTS,\n  IMG_BASE_URL,\n  fetchGenres,\n} from './fetchMovies';\nimport { createStarRating } from './stars';\nimport { openMovieDetailModal } from './pop-up.js';\n\nasync function fetchTrendingMovie() {\n  const response = await fetchMovies(BASE_URL, ENDPOINTS.POPULAR_MOVIES);\n  const data = await response.results;\n\n  let index = 0;\n  const heroContainer = document.querySelector('.hero-container');\n\n  // İlk film\n  updateHero(data[index]);\n\n  setInterval(() => {\n    // Opaklığı sıfırla (kaybolsun)\n    heroContainer.style.opacity = '0';\n\n    // Bekle ve sonra değiştir\n    setTimeout(() => {\n      index = (index + 1) % data.length;\n      updateHero(data[index]);\n\n      // Yeni film geldiğinde tekrar görünür yap\n      heroContainer.style.opacity = '1';\n    }, 500); // Geçiş efekti süresi\n  }, 5000);\n}\n\nfunction updateHero(movie) {\n  const heroContainer = document.querySelector('.hero-container');\n\n  // Eğer ekran genişliği 480px'den küçükse poster_path kullan\n  function setHeroBackground(movie) {\n    const isMobile = window.innerWidth < 480;\n    const imagePath = isMobile\n      ? `${ENDPOINTS.IMG_W500}${movie.poster_path}`\n      : `${ENDPOINTS.IMG_W1280}${movie.backdrop_path}`;\n\n    const backgroundUrl = `${IMG_BASE_URL}${imagePath}`;\n    heroContainer.style.backgroundImage = `url('${backgroundUrl}')`;\n    heroContainer.style.backgroundSize = 'cover';\n    heroContainer.style.backgroundPosition = 'center';\n    heroContainer.style.backgroundRepeat = 'no-repeat';\n  }\n\n  // Sayfa yüklendiğinde ve yeniden boyutlandırıldığında çalıştır\n  window.addEventListener('load', () => setHeroBackground(movie));\n  window.addEventListener('resize', () => setHeroBackground(movie));\n\n  const starsHTML = createStarRating(movie.vote_average);\n\n  heroContainer.innerHTML = `\n    <div class=\"hero-content\">\n      <h1 class=\"hero-title\">${movie.title}</h1>\n      <div class=\"hero-rating\">${starsHTML}</div>\n      <p class=\"hero-description\">${movie.overview}</p>\n      <div class=\"hero-buttons\">\n        <button class=\"watch-trailer-btn\">Watch trailer</button>\n        <button class=\"more-details-btn\">More details</button>\n      </div>\n    </div>\n  `;\n\n  const watchBtn = document.querySelector('.watch-trailer-btn');\n  watchBtn.addEventListener('click', () => openTrailerModal(movie.id));\n\n  const moreBtn = document.querySelector('.more-details-btn');\n  moreBtn.addEventListener('click', () => openMovieDetailModal(movie));\n}\n\nasync function fetchCategories() {\n  const response = await fetch(\n    `${BASE_URL}/genre/movie/list?api_key=${API_KEY}&language=en-US`\n  );\n  const data = await response.json();\n  renderCategories(data.genres);\n}\n\nfunction renderCategories(genres) {\n  const categorySection = document.getElementById('category');\n  if (!categorySection) return;\n\n  categorySection.innerHTML = genres\n    .map(\n      genre => `\n        <div class=\"category-card\">${genre.name}</div>\n      `\n    )\n    .join('');\n}\n\nfetchTrendingMovie();\nfetchCategories();\n\nexport { fetchTrendingMovie, updateHero, fetchCategories, renderCategories };\n\nasync function openTrailerModal(movieId) {\n  const response = await fetch(\n    `${BASE_URL}/movie/${movieId}/videos?api_key=52238d7fab5c2c01b99e751619dd16ec&language=en-US`\n  );\n  const data = await response.json();\n\n  // YouTube videoları içinde trailer olanı bul\n  const trailer = data.results.find(\n    video => video.type === 'Trailer' && video.site === 'YouTube'\n  );\n\n  const iframe = document.getElementById('trailerIframe');\n  const modal = document.getElementById('trailerModal');\n\n  if (trailer) {\n    iframe.src = `https://www.youtube.com/embed/${trailer.key}`;\n    modal.style.display = 'block';\n  } else {\n    alert('Trailer bulunamadı.');\n  }\n}\n\n// Modal kapatma\ndocument.getElementById('closeTrailer').addEventListener('click', () => {\n  const modal = document.getElementById('trailerModal');\n  const iframe = document.getElementById('trailerIframe');\n\n  modal.style.display = 'none';\n  iframe.src = ''; // Temizle\n});\n","import { fetchMovies, BASE_URL, ENDPOINTS, IMG_BASE_URL } from './fetchMovies';\nimport { createStarRating } from './stars';\n\nconst movieList = document.getElementById('movieList');\n\nasync function fetchFirstPageMovies() {\n  const response = await fetchMovies(BASE_URL, ENDPOINTS.POPULAR_MOVIES);\n  const data = await response.results;\n  console.log(data)\n  renderMovieCards(data);\n}\n\nfunction renderMovieCards(movies) {\n  movieList.innerHTML = movies\n    .map(movie => {\n      const { title, poster_path, release_date, vote_average, genre_ids } = movie;\n      const year = release_date ? release_date.split('-')[0] : 'N/A';\n      const genres = genre_ids.slice(0, 2).map(id => genreMap[id]).join(', '); // Genre mapping gerekir\n      const starRating = createStarRating(vote_average)\n\n      return `\n        <div class=\"movie-card\">\n          <div class=\"poster-wrapper\">\n            <img src=\"${IMG_BASE_URL}/w500${poster_path}\" alt=\"${title}\" class=\"movie-poster\" />\n            <div class=\"movie-info-overlay\">\n              <div class=\"movie-meta\">\n                <h3 class=\"movie-title\">${title}</h3>\n                <p class=\"movie-details\">${genres} | ${year}</p>\n              </div>\n              <div class=\"movie-rating\">${starRating}</div>\n            </div>\n          </div>\n        </div>\n      `;\n    })\n    .join('');\n}\n\n// Genre ID to Name eşleşmesi\nconst genreMap = {\n  28: \"Action\",\n  12: \"Adventure\",\n  16: \"Animation\",\n  35: \"Comedy\",\n  80: \"Crime\",\n  99: \"Documentary\",\n  18: \"Drama\",\n  10751: \"Family\",\n  14: \"Fantasy\",\n  36: \"History\",\n  27: \"Horror\",\n  10402: \"Music\",\n  9648: \"Mystery\",\n  10749: \"Romance\",\n  878: \"Science Fiction\",\n  10770: \"TV Movie\",\n  53: \"Thriller\",\n  10752: \"War\",\n  37: \"Western\"\n};\n\nfetchFirstPageMovies();\n"],"names":["modal","poster","title","votes","popularity","genresSpan","overview","closeBtn","openMovieDetailModal","movie","genreMap","IMG_BASE_URL","ENDPOINTS","genreIds","g","error","fetchTrendingMovie","data","fetchMovies","BASE_URL","index","heroContainer","updateHero","setHeroBackground","imagePath","backgroundUrl","starsHTML","createStarRating","openTrailerModal","fetchCategories","renderCategories","genres","categorySection","genre","movieId","trailer","video","iframe","movieList","fetchFirstPageMovies","renderMovieCards","movies","poster_path","release_date","vote_average","genre_ids","year","id","starRating"],"mappings":"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"}